{"version":3,"sources":["../src/health_check_ctrl.js"],"names":["PanelCtrl","_","panelDefaults","checkInterval","healthy","text","bgColor","fontSize","unhealthy","HealthCheckCtrl","$scope","$injector","defaults","panel","events","on","onInitEditMode","bind","onPanelTeardown","render","updateHealthCheck","addEditorTab","$timeout","cancel","nextTickPromise","doHealthCheck","that","request","XMLHttpRequest","open","onload","status","state","onerror","send","scope","elem","$panelContainer","find","css","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,e,kBAAAA,S;;AACDC,O;;;;;;;;;;;;;;;;;;;;;AAGDC,mB,GAAgB;AACpBC,uBAAe,IADK;AAEpBC,iBAAS;AACPC,gBAAM,SADC;AAEPC,mBAAS,SAFF;AAGPC,oBAAU;AAHH,SAFW;AAOpBC,mBAAW;AACTH,gBAAM,WADG;AAETC,mBAAS,SAFA;AAGTC,oBAAU;AAHD;AAPS,O;;AAchBE,qB;;;AACJ,iCAAYC,MAAZ,EAAoBC,SAApB,EAA+B;AAAA;;AAAA,wIACvBD,MADuB,EACfC,SADe;;AAE7BV,YAAEW,QAAF,CAAW,MAAKC,KAAhB,EAAuBX,aAAvB;;AAEA,gBAAKY,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,MAAKC,cAAL,CAAoBC,IAApB,OAAjC;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,MAAKG,eAAL,CAAqBD,IAArB,OAAjC;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,mBAAf,EAAoC,MAAKI,MAAL,CAAYF,IAAZ,OAApC;;AAEA,gBAAKG,iBAAL;AAR6B;AAS9B;;;;2CAEgB;AACf,iBAAKC,YAAL,CAAkB,SAAlB,EAA6B,uDAA7B,EAAsF,CAAtF;AACD;;;4CAEiB;AAChB,iBAAKC,QAAL,CAAcC,MAAd,CAAqB,KAAKC,eAA1B;AACD;;;8CAEmB;AAClB,iBAAKC,aAAL;AACA,iBAAKD,eAAL,GAAuB,KAAKF,QAAL,CAAc,KAAKF,iBAAL,CAAuBH,IAAvB,CAA4B,IAA5B,CAAd,EAAiD,KAAKJ,KAAL,CAAWV,aAA5D,CAAvB;AACD;;;0CAEe;AACd,gBAAMuB,OAAO,IAAb;;AAEA,gBAAMC,UAAU,IAAIC,cAAJ,EAAhB;AACAD,oBAAQE,IAAR,CAAa,MAAb,EAAqB,GAArB,EAA0B,IAA1B;;AAEAF,oBAAQG,MAAR,GAAiB,SAASA,MAAT,GAAkB;AACjC,kBAAIH,QAAQI,MAAR,KAAmB,GAAvB,EAA4B;AAC1BL,qBAAKb,KAAL,CAAWmB,KAAX,GAAmBN,KAAKb,KAAL,CAAWT,OAA9B;AACAsB,qBAAKP,MAAL;AACD,eAHD,MAGO;AACLO,qBAAKb,KAAL,CAAWmB,KAAX,GAAmBN,KAAKb,KAAL,CAAWL,SAA9B;AACAkB,qBAAKP,MAAL;AACD;AACF,aARD;;AAUAQ,oBAAQM,OAAR,GAAkB,SAASA,OAAT,GAAmB;AACnCP,mBAAKb,KAAL,CAAWmB,KAAX,GAAmBN,KAAKb,KAAL,CAAWL,SAA9B;AACAkB,mBAAKP,MAAL;AACD,aAHD;;AAKAQ,oBAAQO,IAAR;AACD;;;+BAEIC,K,EAAOC,I,EAAM;AAAA;;AAChB,iBAAKtB,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,YAAM;AAC7B,kBAAMsB,kBAAkBD,KAAKE,IAAL,CAAU,kBAAV,CAAxB;AACAD,8BAAgBE,GAAhB,CAAoB,kBAApB,EAAwC,OAAK1B,KAAL,CAAWmB,KAAX,CAAiB1B,OAAzD;AACD,aAHD;AAID;;;;QAtD2BN,S;;AAyD9BS,sBAAgB+B,WAAhB,GAA8B,aAA9B;;yBACe/B,e","file":"health_check_ctrl.js","sourcesContent":["import {PanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport './css/health-check-panel.css!';\n\nconst panelDefaults = {\n  checkInterval: 2000,\n  healthy: {\n    text: 'Healthy',\n    bgColor: '#2F8A00',\n    fontSize: '60px',\n  },\n  unhealthy: {\n    text: 'Unhealthy',\n    bgColor: '#800000',\n    fontSize: '60px',\n  }\n};\n\nclass HealthCheckCtrl extends PanelCtrl {\n  constructor($scope, $injector) {\n    super($scope, $injector);\n    _.defaults(this.panel, panelDefaults);\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n    this.events.on('panel-initialized', this.render.bind(this));\n\n    this.updateHealthCheck();\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/grafana-health-check-panel/editor.html', 2);\n  }\n\n  onPanelTeardown() {\n    this.$timeout.cancel(this.nextTickPromise);\n  }\n\n  updateHealthCheck() {\n    this.doHealthCheck();\n    this.nextTickPromise = this.$timeout(this.updateHealthCheck.bind(this), this.panel.checkInterval);\n  }\n\n  doHealthCheck() {\n    const that = this;\n\n    const request = new XMLHttpRequest();\n    request.open('HEAD', '/', true);\n\n    request.onload = function onload() {\n      if (request.status === 200) {\n        that.panel.state = that.panel.healthy;\n        that.render();\n      } else {\n        that.panel.state = that.panel.unhealthy;\n        that.render();\n      }\n    };\n\n    request.onerror = function onerror() {\n      that.panel.state = that.panel.unhealthy;\n      that.render();\n    };\n\n    request.send();\n  }\n\n  link(scope, elem) {\n    this.events.on('render', () => {\n      const $panelContainer = elem.find('.panel-container');\n      $panelContainer.css('background-color', this.panel.state.bgColor);\n    });\n  }\n}\n\nHealthCheckCtrl.templateUrl = 'module.html';\nexport default HealthCheckCtrl;\n"]}